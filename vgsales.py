# -*- coding: utf-8 -*-
"""VGSales.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1iK8M1vo2zOt-32_grnNAofl3USdV9TQI
"""

import pandas as pd
import matplotlib
import numpy as np
import matplotlib.pyplot as plt

# Abre um arquivo csv, separa as colunas por vírgula(,)
df = pd.read_csv('vgsales.csv', sep=',')

# Verifica se existem valores nulos no dataframe
df.isnull().values.any()

display(df.sort_values(by=['Global_Sales'], ascending = True).head())

# Preenche todos os campos vazio com 0, assim pode usar o astype(int) para converter toda a coluna.
df = df.fillna(0)

# Exclui as seguintes colunas, axis=1 é coluna, axis=0 é linha.
df = df.drop('Rank'       , axis=1)
df = df.drop('NA_Sales'   , axis=1)
df = df.drop('EU_Sales'   , axis=1)
df = df.drop('JP_Sales'   , axis=1)
df = df.drop('Other_Sales', axis=1)

# Exclui todos os registros onde as Vendas globais são inferiores a 0.99
# inplace = True -> Todos os registros deletados vão subir na dataframe e não criarão um espaço vazio nos registros
df.drop(df[df['Global_Sales'] <= 0.99].index, inplace = True)
# Arredonda os valores e os converte em inteiro.
df['Global_Sales'] = df['Global_Sales'].round(0).astype(int)
# Converte a coluna 'Year' em inteiro
df['Year'] = df['Year'].astype(int)
# Apaga os Anos zerados
df.drop(df[df['Year'] == 0].index, inplace = True)

# Cria um grupo de Plataformas / Publisher / Genre e soma com as Vendas globais-> 
platformCount  = df[['Platform' , 'Global_Sales']].groupby('Platform').sum()
publisherCount = df[['Publisher', 'Global_Sales']].groupby('Publisher').sum()
genreCount     = df[['Genre'    , 'Global_Sales']].groupby('Genre').sum()
yearCount      = df[['Year'     , 'Global_Sales']].groupby('Year').sum()

# Objetivo: Mostrar quais foram os anos das maiores vendas globais de cada gênero.

# Cria um grupo entre 'Genêro' e 'Ano', e soma todas as 'Vendas_Globais' que correspondem.
# Ex.: Sem a função sum() o grupo iria considerar apenas o maior valor das 'Vendas_Globais'.
genreYear = df.groupby(['Genre', 'Year']).sum()

# Aqui é definido na função nlargest() quantos registros aparecem por agrupamento.
genreYear = genreYear.groupby(['Genre'])['Global_Sales'].nlargest(2).to_frame()

# Nesse momento temos 3 colunas do tipo INDEX: 'Genre', 'Genre' e 'Year', precisamos 
# remover a coluna duplicada e tirar o atributo INDEX delas, pois usaremos o index padrão do pandas.
# função reset_index é excelente para transformar colunas do tipo INDEX, e duplicadas.
genreYear = genreYear.reset_index(level=[0 ,'Year']).drop('Genre', axis=1).reset_index(level=[0])

display(genreYear.sort_values(by=['Global_Sales'], ascending=False))

# Objetivo: Mostrar quais foram os anos das maiores vendas globais de cada gênero.

platformYear = df.groupby(['Platform', 'Year']).sum()
platformYear = platformYear.groupby(['Platform'])['Global_Sales'].nlargest(2).to_frame()
platformYear = platformYear.reset_index(level=[0 ,'Year']).drop('Platform', axis=1).reset_index(level=[0])

display(platformYear.sort_values(by=['Global_Sales'], ascending=False))

# Objetivo: Mostrar quais foram os anos das maiores vendas globais de cada gênero.

publisherYear = df.groupby(['Publisher', 'Year']).sum()
publisherYear = publisherYear.groupby(['Publisher'])['Global_Sales'].nlargest(2).to_frame()
publisherYear = publisherYear.reset_index(level=[0 ,'Year']).drop('Publisher', axis=1).reset_index(level=[0])

display(publisherYear.sort_values(by=['Global_Sales'], ascending=False))

# Objetivo: Mostrar quais foram os anos das maiores vendas globais de cada gênero.

gamePlatform = df.groupby(['Name', 'Year']).sum()
gamePlatform = gamePlatform.groupby(['Name'])['Global_Sales'].nlargest(2).to_frame()
gamePlatform = gamePlatform.reset_index(level=[0 ,'Year']).drop('Name', axis=1).reset_index(level=[0])

display(gamePlatform.sort_values(by=['Global_Sales'], ascending=False))

display(df)

gamePlatform = df.groupby(['Name'])['Global_Sales'].sum().to_frame()
display(gamePlatform.sort_values(by=['Global_Sales'], ascending=False).reset_index(level=[0]))

display(df.loc[(df['Name'] == 'Grand Theft Auto V')], ['Name', 'Platform', 'Publisher'])

display(df.sort_values(by=['Global_Sales'], ascending=False))

# Filtra os registros na ordem decresente de acordo com as vendas globais
display(platformCount.sort_values(by=['Global_Sales'] , ascending=False))
display(publisherCount.sort_values(by=['Global_Sales'], ascending=False))
display(genreCount.sort_values(by=['Global_Sales']    , ascending=False))
display(yearCount.sort_values(by=['Global_Sales']     , ascending=False))